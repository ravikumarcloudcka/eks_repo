version: 0.2
run-as: root

phases:
  install:
    commands:
      - echo Installing app dependencies...
      - curl -o kubectl https://s3.us-west-2.amazonaws.com/amazon-eks/1.23.7/2022-06-29/bin/linux/amd64/kubectl   
      - chmod +x ./kubectl
      - mkdir -p $HOME/bin && cp ./kubectl $HOME/bin/kubectl && export PATH=$PATH:$HOME/bin
      - echo 'export PATH=$PATH:$HOME/bin' >> ~/.bashrc
      - source ~/.bashrc
      - echo 'Check kubectl version'
      - kubectl version --short --client
      - chmod +x prereq.sh
      - sh prereq.sh
  pre_build:
    commands:
      - echo Logging in to Amazon EKS...
      - aws sts get-caller-identity
      - aws eks --region ap-south-1 update-kubeconfig --name zi_project
      - echo check config 
      - kubectl config view --minify
      - echo check kubectl access
      - kubectl get svc
      - echo Logging in to Amazon ECR...
      - aws --version
      - aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 540383637988.dkr.ecr.ap-south-1.amazonaws.com
      - REPOSITORY_URI=540383637988.dkr.ecr.ap-south-1.amazonaws.com/service2
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
      - docker build -t service2 .
      - docker tag service2:latest $REPOSITORY_URI:latest
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $REPOSITORY_URI:latest
      - echo Push the latest image to cluster
      - kubectl apply -f .
      - kubectl rollout restart nodejs_deploy.yaml
      - echo Writing image definitions file...
      - printf '[{"name":"service2","imageUri":"%s"}]' $REPOSITORY_URI:latest > imagedefinitions.json
artifacts:
    files: imagedefinitions.json
